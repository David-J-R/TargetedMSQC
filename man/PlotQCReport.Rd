% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots.R
\name{PlotQCReport}
\alias{PlotQCReport}
\title{Draws violin plots to  show distribution of QC features for a dataset}
\usage{
PlotQCReport(response.data, response.var = c("Status.prediction"),
  report.path = "", min.ok.transitions.threshold = 3, plot.prob = FALSE,
  flag.class.prob.var = c("flag.prob.prediction"), ...)
}
\arguments{
\item{response.data}{A dataframe with identifier columns (File, FileName, PeptideModifiedSequence, FragmentIon, PrecursorCharge ,ProductCharge) and the response variable column (Status.prediction by default). Usually, the input dataframe is the output of the ApplyQCModel function.}

\item{response.var}{The name of the column in the input data that contains the response variable to be used for creating the dataset QC report. This variable is usually the predicted status for each peak generated by the ApplyQCModel function.}

\item{report.path}{The path to directory where the pdf file of the QC report should be saved.}

\item{min.ok.transitions.threshold}{Minimum number of transitions that should pass QC for a peptide to pass QC in each sample.}

\item{plot.prob}{A logical value to indicate whether the class probabilities should be used in heatmaps. If plot.prob = FALSE,  of the class probabilities, the assigned binary class will be used.}

\item{flag.class.prob.var}{The name of the response.data column that holds class probabilities for the "flag" class. This parameter is used only if plot.prob = TRUE.}
}
\value{
Saves a .pdf file of the QC report in report.path
}
\description{
A longer description of how the function works.
}
\examples{

response.data <- ApplyQCModel(data.set.CSF$feature.data,
                              model.rrf.CSF,
                              response.var = c("Status"),
                              description.columns = c("Notes"),
                              flag.prob.threshold = 0.5,
                              type = "prob")
PlotQCReport(response.data,report.path = "",response.var = c("Status.prediction"),plot.prob = TRUE)
}
